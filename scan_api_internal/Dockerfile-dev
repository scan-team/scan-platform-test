# =================================================================================================
# Project: SCAN - Searching Chemical Actions and Networks
#          Hokkaido University (2021)
#          Last Update: Q2 2023
# ________________________________________________________________________________________________
# Authors: NorthGrid (Support Dev)
#          Mikael Nicander Kuwahara (Lead Developer) [2022-]
#          Jun Fujima (Former Lead Developer) [2021]
# ________________________________________________________________________________________________
# Description: This is the Developer version of the Dockerfile for the scan-api-internal part of 
#              the SCAN Project.
# ------------------------------------------------------------------------------------------------
# Notes: This was part of the NorthGrid Support in 2022 
# ------------------------------------------------------------------------------------------------
# References: 
# =================================================================================================

FROM condaforge/miniforge3

LABEL maintainer "jfujima"
RUN set -ex \
  && apt-get update -y --fix-missing \
  && apt-get install -y -q --no-install-recommends \
  curl \
  file \
  && apt-get purge -y --auto-remove

WORKDIR /var/app/scan_api_internal

# SHELL ["/bin/bash", "-l", "-c"]

# install poetry
RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
ENV PATH /root/.local/bin:$PATH

ENV PATH /opt/miniconda3/bin:$PATH

# create conda env
# ARG env_name=scan-env
COPY env.yaml ./
RUN conda env create -f env.yaml
# RUN source activate scan-env
SHELL ["conda", "run", "-n", "scan-env", "/bin/bash", "-c"]

# FOR interactive shell
RUN echo "source activate scan-env" >> ~/.bashrc

# install dependencies
COPY poetry.toml poetry.lock pyproject.toml ./
# RUN poetry config virtualenvs.create false
RUN poetry install

RUN conda env list
RUN conda list


# add to application
# COPY app.py ./
# ADD service service
# ADD scan_analytics scan_analytics
# ADD grrm grrm
# ADD python-scripts python-scripts

# ADD gunicorn.conf.py ./

EXPOSE 8000
# CMD ["uvicorn", "app:api", "--host", "0.0.0.0", "--port", "8000", "--root-path", "echo '/api'"]
# CMD uvicorn app:api --host 0.0.0.0 --port 8000 --root-path $ROOT_PATH
# CMD uvicorn app:api --host 0.0.0.0 --port 8000
# CMD gunicorn app:api --config gunicorn.conf.py
CMD ["conda", "run", "--no-capture-output", "-n", "scan-env", "gunicorn", "app:api", "--config", "gunicorn.conf.py", "--reload"]