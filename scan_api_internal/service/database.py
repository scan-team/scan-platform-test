# =================================================================================================
# Project: SCAN - Searching Chemical Actions and Networks
#          Hokkaido University (2021)
#          Last Update: Q2 2023
# ________________________________________________________________________________________________
# Authors: Mikael Nicander Kuwahara (Lead Developer) [2022-]
#          Jun Fujima (Former Lead Developer) [2021]
# ________________________________________________________________________________________________
# Description: This is the Database Service for the scan-api-internal parts of the Scan Platform 
#              Project.
# ------------------------------------------------------------------------------------------------
# Notes: 
# ------------------------------------------------------------------------------------------------
# References: os, 3rd party sqlalchemy and dotenv
# =================================================================================================


# -------------------------------------------------------------------------------------------------
# Load required libraries
# -------------------------------------------------------------------------------------------------
import os
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from dotenv import load_dotenv

# -------------------------------------------------------------------------------------------------


# -------------------------------------------------------------------------------------------------
# Initiation
# -------------------------------------------------------------------------------------------------
load_dotenv()

# -------------------------------------------------------------------------------------------------


# -------------------------------------------------------------------------------------------------
# Global constants and variables
# -------------------------------------------------------------------------------------------------
params = {
    "user": os.getenv("DB_USER"),
    "password": os.getenv("DB_PASSWORD"),
    "host": os.getenv("DB_HOST"),
    "database": os.getenv("DATABASE"),
}

DATABASE_URL = "mysql+pymysql://{user}:{password}@{host}:3306/{database}".format(**params)

# -------------------------------------------------------------------------------------------------


# -------------------------------------------------------------------------------------------------
# Setup
# -------------------------------------------------------------------------------------------------
engine = create_engine(DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

Base = declarative_base()

# -------------------------------------------------------------------------------------------------


# -------------------------------------------------------------------------------------------------
# Database Session Method
# -------------------------------------------------------------------------------------------------
def session():
    """
    Get Database Session
    :return:
    """
    db = None
    try:
        db = SessionLocal()
        yield db
    finally:
        db.close()

# -------------------------------------------------------------------------------------------------
