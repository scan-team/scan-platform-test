# =================================================================================================
# Project: SCAN - Searching Chemical Actions and Networks
#          Hokkaido University (2021)
#          Last Update: Q2 2023
# ________________________________________________________________________________________________
# Authors: Mikael Nicander Kuwahara (Lead Developer) [2022-]
#          Jun Fujima (Former Lead Developer) [2021]
#          NorthGrid (Support Dev)
# ________________________________________________________________________________________________
# Description: This is the docker-compose file template for the entire SCAN project used during 
#              development that defines all services and more that is required in order to run the 
#              app, but also updates the website in realtime and speed up all coding.
# ------------------------------------------------------------------------------------------------
# Notes: 
# ------------------------------------------------------------------------------------------------
# References: 
# =================================================================================================
version: '3.5'

services:
  # MySQL
  db:
    image: scan-mariadb
    container_name: mysql_host
    env_file:
      - .env
    volumes:
      - ./scan-mariadb/docker/db/data:/var/lib/mysql
      - ./scan-mariadb/docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./scan-mariadb/docker/db/init:/docker-entrypoint-initdb.d
      - ./scan-mariadb/docker/db/scripts:/scripts
    ports:
      - 127.0.0.1:3306:3306
    # - 3306:3306
    networks:
      - scan-network
    user: '${USERID}:${GROUPID}'

  # phpMyAdmin
  phpmyadmin:
    container_name: test_phpmyadmin
    image: phpmyadmin/phpmyadmin
    env_file:
      - .env
    ports:
      - 127.0.0.1:8080:80
    networks:
      - scan-network

  redis:
    restart: always
    image: redis:6.0
    container_name: scan_redis
    expose:
      - "6379"
    logging:
      driver: "json-file" # defaults if not specified
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - scan-network

  api_internal:
    image: scan_api_internal-dev
    container_name: scan_api_internal
    env_file: .env
    ports:
      - '127.0.0.1:${API_PORT}:8000'
    volumes:
      - ./scan_api_internal/app.py:/var/app/scan_api_internal/app.py
      - ./scan_api_internal/service:/var/app/scan_api_internal/service
      - ./scan_api_internal/scan_analytics:/var/app/scan_api_internal/scan_analytics
      - ./scan_api_internal/grrm:/var/app/scan_api_internal/grrm
      - ./scan_api_internal/python-scripts:/var/app/scan_api_internal/python-scripts
      - ./scan_api_internal/gunicorn.conf.py:/var/app/scan_api_internal/gunicorn.conf.py
    networks:
      - scan-network  
        
  api_public:
    image: scan_api_public-dev
    container_name: scan_api_public
    env_file: .env
    ports:
      - "127.0.0.1:${PUBLIC_API_PORT}:8000"
    volumes:
      - ./scan_api_public/app.py:/app.py
      - ./scan_api_public/service:/service
      - ./scan_api_public/scan_analytics:/scan_analytics
      - ./scan_api_public/grrm:/grrm
      - ./scan_api_public/keyfiles:/keyfiles
    depends_on:
      - redis
    networks:
      - scan-network
    user: '${USERID}:${GROUPID}'

  app:
    image: scan-app-dev
    env_file: .env
    container_name: scan_app
    ports:
      - "0.0.0.0:3000:3000"
    #   - '0.0.0.0:80:3000'
    volumes:
      - ./scan-app:/app
      - /app/node_modules
    networks:
      - scan-network

  # make sure the real path of the SSL Certs are correct in the last line under  volumes
  nginx:
    env_file: .env
    container_name: nginx
    image: nginx:alpine

    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./scan-reverse-proxy/root:/usr/local/nginx/html
      - ./scan-reverse-proxy/conf.d:/etc/nginx/conf.d
      - ./scan-reverse-proxy/log:/var/log/nginx/
      - /etc/ssl/certs:/etc/ssl/certs # Here is the local SSL Certs path
    depends_on:
      app:
        condition: service_started
    networks:
      - scan-network
  
networks:
  scan-network:
    name: scan-network
    driver: bridge
